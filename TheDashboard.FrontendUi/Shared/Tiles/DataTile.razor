@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

<div class="@positioningClass">
  <h3>@Title</h3>
  <h4>@Subtitle</h4>
  <p>
    @messages.Count()
  </p>
  @Content
</div>

@code {
  private HubConnection? hubConnection;
  private List<string> messages = new List<string>();
  private string? userInput;
  private string? messageInput;

  private string positioningClass => $"col-{Width} offset-{X} offset-{Y}";

  [Parameter]
  public int X { get; set; }

  [Parameter]
  public int Y { get; set; }

  [Parameter]
  public int Width { get; set; }

  [Parameter]
  public string Title { get; set; }

  [Parameter]
  public string Subtitle { get; set; }

  [Parameter]
  public RenderFragment Content { get; set; }

  protected override async Task OnInitializedAsync()
  {
    hubConnection = new HubConnectionBuilder()
        .WithUrl("https://localhost:5400/datahub")
        .Build();

    hubConnection.On<int, string>("ReceiveData", (tileId, message) =>
    {
      var encodedMsg = $"{tileId}: {message}";
      messages.Add(encodedMsg);
      InvokeAsync(StateHasChanged);
    });

    await hubConnection.StartAsync();
  }

  private async Task Send()
  {
    if (hubConnection is not null)
    {
      await hubConnection.SendAsync("SendMessage", userInput, messageInput);
    }
  }

  public bool IsConnected =>
      hubConnection?.State == HubConnectionState.Connected;

  public async ValueTask DisposeAsync()
  {
    if (hubConnection is not null)
    {
      await hubConnection.DisposeAsync();
    }
  }
}